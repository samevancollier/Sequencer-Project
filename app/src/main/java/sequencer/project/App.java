/*
 * This source file was generated by the Gradle 'init' task
 */
package sequencer.project;

import sequencer.project.audio.*;
import sequencer.project.model.*;
import javafx.application.Application;
import javafx.scene.shape.Rectangle;
import sequencer.project.GUI.*;

//to do
//fix block swapping behaivour                                                                                          :)
//dragging blocks between different tracks                                              
//creating new blocks by dragging right                                                                            :)
//remove block by dragging left                                                                                         :)
//removing block preview                                                                                            :)
//playback cursor :0
//fix the overall track width being kind of weird/snappy
//make trackcontainer big, but empty...                                                         :)
//differentiating visually between empty blocks and not empty blocks (opacity)
//play pause and stop buttons actually do something                                     :)
//fix the weird scrolling up inside track thing
//colour behaivour, colour enum
//zooming in and out :O
//add create track button and make it work              :)
//delete tracks with keyboard                                   :)
//hotkeys for various things
//copy/paste functionality
//backgrounds                                                                                               :)
//start using CSS                                       :)
//opaque track controls                                                 :)
//fix various weird misalignments
//refactor Track to use Block objects
//move groups of tracks
//move tracks more than one up or down at a time
//FX area functionality
//support empty space? 
//hovering over block swaps blocks visually
//implement theme manager                               :)
//clicking all empty space deselects selection
//fix weird ghost track at bottom                                                                   :)
//FIX weird behaivour after track 5????                                                                     :)
//fix WEIRD paleness of transport controls sometimes??? after draggiog
//fix weird transparency of transport controls sometimes
//FIX weird selection/emptying/deletion of first selected block...                          :)
//fix weird scollpane behaivour
//FIX background scrolling behaivour            :)
//fix jumpy background at far edge                  :)
//collapsible track rows
//playback cursor                                       :)
//fix disappearing playback cursor      :)
//FIX cursor disapparing too early/position slightly wrong probably because of weird padding somewhere              :)
//make playback cursor prettier
//set playback cursor with mouse click  :)
//FIX clicking inside blocks still sets position if it is not on the header
//Selecting block will change playback position
//fix sometimes play has to be clicked twice for some reason                
//fix crashing to do with playback cursor (happend once)
//fix cursor being set slightly offset from click position (to do with width somehow)               :)
//fix cursor not catching up                                                                                                :)
//fix not being able to  set custom playback pos until played at least once             :)
//fix clicks becoming increasingly innaccurate deeper into the track                    :)

//pressing stop button while playing spazzes out                :)

//FIX ugly horizontal lines in pianoroll: create drawHorizontalLines method probably
//big fix fix the piano roll behauvour when resizing window horizontally
//fix the piano roll gridpane being slightly too long for no fucking reason...
//FIX backgrounds of piano roll being redrawn on resolution change          :)
//actually be able to draw in notes lol                                 :)

//play notes on keyboard

//drag notes, extend notes, delete nontes TOTALLY TWEAKED RN            :)
//notes correspond to actual blocks
//create sample instruments
//ascii and default themes
//note drawing algo for blocks

//greyed out keys where no sample exists
//play the keyboard!

//FIX quantisation piano rollresizing resolution issue

//fix theme manager to use json as css actually retarded 
//make notes not horrible looking
//highlight notes to be deleted
//drag box to select notes                                          :)
//double click to add notes (fix bubbling issue)                    :)
//delete notes with keys                                            :)
//move notes with keys                                              :)
//FIX horrendous piano roll bugs                                            :)
//notes after being resized when selected sometimes do not change colour?       :)
//notes which have been moved can no longer seemingly be deleted or moved again lol         :)
//note quantization when moving issue (is it actually an issue)
//fix notes not being deleted off edge                              :)

//drag multiple notes around                                                                :)
//drag selection without holding shift
//fix behaivour of dragged notes at edges (edge should act like a wall)
//fix piano roll scrolling with key movement
//fix selections no longer move with key presses after resolution change 

//MAKE SURE model is being updated correctly

//make sure the track container is requesting focus if neccesary

//today:
//

public class App {
    private static AudioEngine audioEngine;
    private static AudioPlayer audioPlayer;
    private static Sequence currentSequence;
    public static void main(String[] args) {
        

        currentSequence=new Sequence();
        audioEngine=new AudioEngine();
        audioPlayer=new AudioPlayer(currentSequence,audioEngine);
        
 

        
        
        
        currentSequence.addTrack("Teenage Drums"); currentSequence.addTrack("Square");
        Track myTrack = currentSequence.getTrack(0); Track myTrack2 = currentSequence.getTrack(1);
        System.out.println("Track number: " + myTrack.getTrackNumber());
        
        for(int i = 0; i<2000; i++){
            myTrack.addNote(i, 60, 127, 1);
            if(i%4==0){
                myTrack.addNote(i, 62, 127, 1);
            }
            if(i%2==0 || i==0 && i<15){
                myTrack2.addNote(i, 60, 127, 1);
            }
            if((i%2==0 || i==0) && i>30){
                myTrack2.addNote(i, 62, 127, 1);
                myTrack.addNote(i, 64, 127, 1);
            }
            if((i%2==0 || i==0) && i>45){
                myTrack2.addNote(i, 63, 127, 1);
            }
        }

        Application.launch(sequencer.project.GUI.GUILauncher.class, args);
        /* 
        try {
            audioPlayer.play();
            Thread.sleep(10000);
            audioPlayer.pause();
            

            audioPlayer.setPlaybackPoint(0);//i think this works
            Thread.sleep(2000);
            audioPlayer.resume();
            
        } catch (Exception e) {
            System.out.println("rhewbfuewjbf");
        }
            

        
        myTrack2.addNote(0, 62, 127, 40);
        myTrack2.addNote(24, 62, 0, 20);
        myTrack2.addNote(0, 62, 0, 20);
        Bitcrush bitcrushr = new Bitcrush(); bitcrushr.setBitDepth(1);
        myTrack2.addFX(bitcrushr, 0);
        myTrack.addFX(bitcrushr, 0);
        */
        //audioPlayer.play();
        //System.out.println("Starting playback...");
        
        
        
            
        
        

        /* currentSequence.addTrack("Teenage Drums");
        Track myTrack = currentSequence.getTrack(0);
        System.out.println(myTrack.getTrackNumber());
        myTrack.addNote(0, 60, 0, 1);
        myTrack.addNote(1, 60, 0, 1);
        myTrack.addNote(2, 60, 0, 1);
        myTrack.addNote(3, 60, 0, 1);
        myTrack.addNote(4, 60, 0, 1);
        myTrack.addNote(5, 60, 0, 1);
        audioPlayer.play();
        while(audioPlayer.playing()) {
            try {
                 Thread.sleep(100);
            } catch (InterruptedException e) {
                break;
            }
        }
    */
        System.out.println("done");
    }
    public static AudioEngine getAudioEngine(){ return audioEngine; }
    public static AudioPlayer getAudioPlayer(){ return audioPlayer; }
    public static Sequence getCurrentSequence(){ return currentSequence; }

    
}

